apply plugin: 'java'
apply plugin: 'antlr'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version '0.3'
group   'org.jacamo'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
	
    maven {
        url "http://jacamo.sourceforge.net/maven2"
    }
}

dependencies{
   antlr "org.antlr:antlr4:4.7" // use ANTLR version 4
   compile group: 'org.jason-lang', name: 'jason',    version: '2.4', changing: false
   compile group: 'org.jacamo',     name: 'moise' ,   version: '0.12', changing: true, transitive: false
   compile group: 'org.jacamo',     name: 'npl' ,     version: '0.4', changing: false, transitive: false
   compile group: 'org.jacamo',     name: 'cartago',  version: '2.4', changing: true, transitive: false
   compile group: 'org.jacamo',     name: 'jaca',     version: '2.4', changing: true, transitive: false
   	
   testCompile group: 'junit', name: 'junit', version: '4.+'
}

jar {
    baseName 'sai'
}


//task fixTab {
//    ant.fixcrlf(eol: 'lf',  includes: '**/*.txt,**/*.bat, **/*.adoc', srcdir: '.')
//    ant.fixcrlf(tab: 'remove', tablength: '4', javafiles: 'true', includes: '**/*.java,**/*.xml,**/*.xsl,**/*.xsd', srcdir: 'src')
//    ant.fixcrlf(tab: 'remove', tablength: '4', javafiles: 'true', includes: '**/*.java,**/*.xml,**/*.xsl,**/*.xsd', srcdir: 'examples')
//}


// the following lines is used to avoid errors while generating javadoc
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    baseName 'sai'
    classifier = 'javadoc'
    from '${docsDir}/../../doc/api'
}

task sourceJar (type : Jar) {
    baseName 'sai'
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            artifactId 'sai'
        }
    }
}


task publishMavenSF(dependsOn: [ 'jar', 'build', 'publishToMavenLocal', 'sourceJar', 'javadocJar']) {
  doLast {
    description 'transfer local maven artifact to our maven2 repository at sourceforge'

    def wdir = System.getProperty("user.home")+'/.m2/repository/org/jacamo/sai'
    def tdir = 'jomifred,jacamo@web.sf.net:/home/project-web/jacamo/htdocs/maven2/org/jacamo/sai'
    exec {
        commandLine 'scp', '-r', project.version, tdir
        workingDir wdir
    }
    exec {
        commandLine 'cp', 'maven-metadata-local.xml', 'maven-metadata.xml'
        workingDir wdir
    }
    exec {
        commandLine 'scp', 'maven-metadata.xml', tdir
        workingDir wdir
    }
  }
}
